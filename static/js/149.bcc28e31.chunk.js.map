{"version":3,"file":"static/js/149.bcc28e31.chunk.js","mappings":"gUAuCA,EAnC2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAK,EAALA,MACAC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACAC,EAAU,EAAVA,WACGC,GAAK,YAEFC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAiB,YAAIH,GAAWD,GAAQ,GAAJ,OAAOI,EAAiB,YAAIJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAiB,YAAuB,kBAAZR,EAAuB,WAAH,OAAcA,GAAY,WAAaC,GAAY,GAAJ,OAAOO,EAAiB,aAAaN,GAAc,GAAJ,OAAOM,EAAiB,eAAeL,GAAS,GAAJ,OAAOK,EAAiB,WAEzWI,GAAqBC,EAAAA,EAAAA,KAAK,SAAS,kBAAKN,GAAK,IACjDR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAiB,eAM1C,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAe,YAAIR,KAGtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEd,CAEA,OAAOA,CACT,I,4BC6BA,MAnDA,WAEI,IAAII,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAY,OAAOA,EAAMF,YAAa,IAGlEG,IAFQF,EAAAA,EAAAA,KAAY,SAACC,GAAY,OAAOA,EAAME,KAAM,KAC7CH,EAAAA,EAAAA,KAAY,SAACC,GAAY,OAAOA,EAAMG,IAAK,KACvCC,EAAAA,EAAAA,OACf,GAAwBC,EAAAA,EAAAA,UAAS,GAAE,eAKnC,OALU,KAAU,MAMhB,0BACI,UAAC,EAAK,CAACvB,SAAO,EAACC,UAAQ,EAACE,OAAK,EAACJ,UAAU,aAAY,WAChD,4BACI,2BACI,+BACA,gDACA,0CACA,2DAGR,2BAEQiB,EAAaQ,KAAI,SAACC,EAAGC,GAAC,OAClB,2BACI,wBAAKA,KACL,wBAAKV,EAAaU,GAAGC,QACrB,wBAAKX,EAAaU,GAAGE,SACrB,2BACI,mBAAQ7B,UAAU,YAAY8B,QAAS,WACnCV,GAASW,EAAAA,EAAAA,IAAOJ,GACpB,EAAE,gBACF,mBAAQ3B,UAAU,YAAY8B,QAAS,WACT,IAA1Bb,EAAaU,GAAGE,MAAcT,GAASY,EAAAA,EAAAA,IAASL,IAAMP,GAASa,EAAAA,EAAAA,IAAUN,GAC7E,EAAE,gBACF,mBAAQ3B,UAAU,YAAY8B,QAAS,WACnCV,GAASa,EAAAA,EAAAA,IAAUN,GACvB,EAAE,oBAbDA,EAeJ,UAQjC,C","sources":["../node_modules/react-bootstrap/esm/Table.js","routes/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import Table from 'react-bootstrap/Table';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addOne, minusOne, deleteOne } from './../store/shoppinglistSlice.js'\r\nimport { changeName } from './../store.js'\r\nimport { useState } from 'react';\r\n\r\n// Cart 웹 페이지\r\n\r\n\r\n// let Child = memo(function () {\r\n//     console.log('재렌더링됨')\r\n//     return <div>자식임</div>\r\n// })\r\n\r\n// memo : props 가 변할 때만 재렌더링 해줌\r\n\r\nfunction Cart() {\r\n\r\n    let shoppinglist = useSelector((state) => { return state.shoppinglist });\r\n    let stock = useSelector((state) => { return state.stock });\r\n    let user = useSelector((state) => { return state.user });\r\n    let dispatch = useDispatch();\r\n    let [count, setCount] = useState(0)\r\n\r\n    //let result = useMemo(()=>{return usememoFunction(),[state]})\r\n    // useMemo : 컴포넌트 로드시 1회만 실행하고 싶은 코드가 있으면 거기 담으면 됩니다. \r\n\r\n    return (\r\n        <div>\r\n            <Table striped bordered hover className='cart-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th> </th>\r\n                        <th>상품명</th>\r\n                        <th>수량</th>\r\n                        <th>변경하기</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        shoppinglist.map((a, i) =>\r\n                            <tr key={i}>\r\n                                <td>{i}</td>\r\n                                <td>{shoppinglist[i].name}</td>\r\n                                <td>{shoppinglist[i].count}</td>\r\n                                <td>\r\n                                    <button className='changebtn' onClick={() => {\r\n                                        dispatch(addOne(i))\r\n                                    }}>+</button>\r\n                                    <button className='changebtn' onClick={() => {\r\n                                        shoppinglist[i].count !== 1 ? dispatch(minusOne(i)) : dispatch(deleteOne(i))\r\n                                    }}>-</button>\r\n                                    <button className='changebtn' onClick={() => {\r\n                                        dispatch(deleteOne(i))\r\n                                    }}>X</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Cart"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","shoppinglist","useSelector","state","dispatch","stock","user","useDispatch","useState","map","a","i","name","count","onClick","addOne","minusOne","deleteOne"],"sourceRoot":""}