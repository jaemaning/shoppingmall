{"version":3,"file":"static/js/768.06047157.chunk.js","mappings":"0LA4GA,SAASA,EAAWC,IAEHC,EAAAA,EAAAA,YAAWC,EAAAA,GAAlBC,aAAN,IAEA,GAAsBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KAUlB,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAIC,YAAW,WAAQH,EAAQ,MAAO,GAAG,IAC7C,OAAO,WACHA,EAAQ,IACRI,aAAaF,EACjB,CACJ,GAAG,CAACR,EAAMW,cAEF,gBAAKC,UAAW,SAAWP,EAAK,SACnC,EAAC,yBAAML,EAAMa,MAAM,GAAGC,SAAc,2CAAe,kCAAgBd,EAAMW,aAElF,CAEA,UAvHA,SAAgBX,GAEZ,IAAIe,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAY,OAAOA,EAAMF,YAAa,IAClEG,GAAWC,EAAAA,EAAAA,MAIf,IAFalB,EAAAA,EAAAA,YAAWC,EAAAA,GAAlBC,cAEwBC,EAAAA,EAAAA,WAAS,IAAK,eAAvCgB,EAAQ,KAAEC,EAAW,KAC1B,GAA8BjB,EAAAA,EAAAA,WAAS,GAAM,eAAxCkB,EAAQ,KAAEC,EAAW,KAC1B,GAAgCnB,EAAAA,EAAAA,WAAS,GAAM,eAC/C,GADc,KAAc,MACRA,EAAAA,EAAAA,UAAS,CAAC,2BAAQ,eAAM,SAAO,eAA9CoB,EAAG,KACR,GADgB,MACkBpB,EAAAA,EAAAA,UAAS,IAAE,eAAxCO,EAAU,KAAEc,EAAa,MAE9BlB,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAIC,YAAW,WAAQY,GAAY,EAAO,GAAG,KAEjD,OAAO,WACHX,aAAaF,EACjB,CACJ,GAAG,IAEH,IASMkB,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAS5B,EAAMa,MAAMa,GAAIA,GACzBG,EAASC,OAAOF,GAAU,EAC9B,GAAwBxB,EAAAA,EAAAA,UAAS,IAAG,eAA/B2B,EAAK,KAAEC,EAAQ,KAChBC,EAAc,EAgBlB,OAZA1B,EAAAA,EAAAA,YAAU,WACNyB,EAAS,MACb,GAAG,KAEHzB,EAAAA,EAAAA,YAAU,WACN,IAAI2B,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,YAClDJ,EAAYK,KAAKb,GACjB,IAAMc,EAAM,IAAIC,IAAIP,GACpBA,GAAW,OAAOM,GAClBH,aAAaK,QAAQ,UAAWP,KAAKQ,UAAUT,GACnD,GAAG,KAGC,iBAAKtB,UAAW,mBAAqBmB,EAAM,UAEvB,GAAZX,GACI,gBAAKR,UAAU,sBAAqB,kEAGlC,MAEV,iBAAKA,UAAU,MAAK,WAChB,gBAAKA,UAAU,aAAY,UACvB,gBAAKgC,IAAK,4CAA8Cf,EAAS,OAAQgB,MAAM,WAGnE,GAAZvB,GACM,gBAAKV,UAAU,cAAa,+EAC5B,MAEV,iBAAKA,UAAU,iBAAgB,WAC3B,kBAAOA,UAAU,WAAWkC,YAAY,oDAAYC,SAhDrD,SAACC,GACZC,QAAQC,IAAIpB,OAAOkB,EAAEG,OAAOC,QAC5B,IAAIC,EAAKvB,OAAOkB,EAAEG,OAAOC,OACR,GAAbE,MAAMD,KACNE,MAAM,qDACNhC,GAAY,GAEpB,KA0CgB,eAAIX,UAAU,OAAM,SAAEZ,EAAMa,MAAMe,GAAQd,SAC1C,uBAAId,EAAMa,MAAMe,GAAQ4B,WACxB,yBAAIxD,EAAMa,MAAMe,GAAQ6B,MAAK,cAC7B,mBAAQ7C,UAAU,0BAA0B8C,QAAS,WACjD,IAAIC,EAAY5C,EAAa6C,MAAK,SAACR,EAAOS,GACtC,OAAIT,EAAM1B,IAAM1B,EAAMa,MAAMe,GAAQF,KACzBO,EAAc4B,GAAG,EAEhC,IACoB3C,EAAP,GAAbyC,GAA6BG,EAAAA,EAAAA,IAAO7B,IAAyB8B,EAAAA,EAAAA,IAAQ,CAAErC,GAAI1B,EAAMa,MAAMe,GAAQF,GAAIsC,KAAMhE,EAAMa,MAAMe,GAAQd,MAAOmD,MAAO,KAC3IV,MAAM,6CACV,EAAE,6CAGV,yBAEQ/B,EAAI0C,KAAI,SAAU1D,EAAGqD,GACjB,OACI,mBAAgBjD,UAAU,WAAW8C,QAAS,WAC1CjC,EAAcoC,EAClB,EAAE,SAAErD,GAFSA,EAIrB,OAGR,SAACT,EAAU,CAACc,MAAOb,EAAMa,MAAOF,WAAYA,MAGxD,C","sources":["routes/Detail.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Context1 } from \"./../App.js\"\r\nimport { cartAdd } from './../store/shoppinglistSlice.js'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addOne, minusOne, deleteOne } from './../store/shoppinglistSlice.js'\r\n\r\nfunction Detail(props) {\r\n\r\n    let shoppinglist = useSelector((state) => { return state.shoppinglist });\r\n    let dispatch = useDispatch();\r\n\r\n    let { 재고 } = useContext(Context1);\r\n\r\n    let [alertdiv, setAlertdiv] = useState(true);\r\n    let [alertbox, setAlertbox] = useState(false);\r\n    let [alertcart, setAlertcart] = useState(false);\r\n    let [btn, setBtn] = useState(['상세정보', '리뷰', 'Q&A']);\r\n    let [modalonbtn, setModalonbtn] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let a = setTimeout(() => { setAlertdiv(false) }, 2000)\r\n\r\n        return () => {\r\n            clearTimeout(a)\r\n        }\r\n    }, [])\r\n\r\n    let onChange = (e) => {\r\n        console.log(Number(e.target.value))\r\n        let ab = Number(e.target.value)\r\n        if (isNaN(ab) == true) {\r\n            alert('숫자만 입력하세요')\r\n            setAlertbox(true)\r\n        }\r\n    }\r\n\r\n    let { id } = useParams();\r\n    let dataid = props.shoes[id].id;\r\n    let picnum = Number(dataid) + 1;\r\n    let [fade2, setFade2] = useState('');\r\n    let cartCheckId = 0;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setFade2('end')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let storageData = JSON.parse(localStorage.getItem('watched'));\r\n        storageData.push(id);\r\n        const set = new Set(storageData);\r\n        storageData = [...set]\r\n        localStorage.setItem('watched', JSON.stringify(storageData));\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"container start \" + fade2}>\r\n            {\r\n                alertdiv == true ?\r\n                    <div className=\"alert alert-warning\">\r\n                        2초 이내 구매시 할인\r\n                    </div>\r\n                    : null\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"pos-center\">\r\n                    <img src={\"https://codingapple1.github.io/shop/shoes\" + picnum + \".jpg\"} width=\"100%\" />\r\n                </div>\r\n                {\r\n                    alertbox == true\r\n                        ? <div className=\"alertRedbox\">경고 : 숫자만 입력하세요.</div>\r\n                        : null\r\n                }\r\n                <div className=\"col-md-12 mt-4\">\r\n                    <input className=\"inputbox\" placeholder=\"숫자만 입력하세요\" onChange={onChange}></input>\r\n                    <h4 className=\"pt-5\">{props.shoes[dataid].title}</h4>\r\n                    <p>{props.shoes[dataid].content}</p>\r\n                    <p>{props.shoes[dataid].price} 원</p>\r\n                    <button className=\"btn btn-danger orderBtn\" onClick={() => {\r\n                        let cartCheck = shoppinglist.some((value, i) => {\r\n                            if (value.id == props.shoes[dataid].id) {\r\n                                return cartCheckId = i, true;\r\n                            } else { return false }\r\n                        })\r\n                        cartCheck == true ? dispatch(addOne(cartCheckId)) : dispatch(cartAdd({ id: props.shoes[dataid].id, name: props.shoes[dataid].title, count: 1 }));\r\n                        alert('Cart에 담겼습니다.')\r\n                    }}>주문하기</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    btn.map(function (a, i) {\r\n                        return (\r\n                            <button key={a} className=\"modalBtn\" onClick={() => {\r\n                                setModalonbtn(i)\r\n                            }}>{a}</button>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Tabcontent shoes={props.shoes} modalonbtn={modalonbtn} />\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction Tabcontent(props) {\r\n\r\n    let { 재고 } = useContext(Context1)\r\n\r\n    let [fade, setFade] = useState('')\r\n\r\n    useEffect(() => {\r\n        let a = setTimeout(() => { setFade('end') }, 10)\r\n        return () => {\r\n            setFade('')\r\n            clearTimeout(a)\r\n        }\r\n    }, [props.modalonbtn])\r\n\r\n    return (<div className={\"start \" + fade}>\r\n        {[<div>{props.shoes[0].title}</div>, <div>리뷰</div>, <div>Q&A</div>][props.modalonbtn]}\r\n    </div>)\r\n}\r\n\r\nexport default Detail"],"names":["Tabcontent","props","useContext","Context1","재고","useState","fade","setFade","useEffect","a","setTimeout","clearTimeout","modalonbtn","className","shoes","title","shoppinglist","useSelector","state","dispatch","useDispatch","alertdiv","setAlertdiv","alertbox","setAlertbox","btn","setModalonbtn","id","useParams","dataid","picnum","Number","fade2","setFade2","cartCheckId","storageData","JSON","parse","localStorage","getItem","push","set","Set","setItem","stringify","src","width","placeholder","onChange","e","console","log","target","value","ab","isNaN","alert","content","price","onClick","cartCheck","some","i","addOne","cartAdd","name","count","map"],"sourceRoot":""}